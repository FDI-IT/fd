# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2020-03-18 14:15
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import newqc.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        # ('access', '0021_auto_20200318_1410'),
    ]

    operations = [
        migrations.CreateModel(
            name='COA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ExperimentalRetain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retain', models.PositiveSmallIntegerField(default=newqc.models.next_experimental_retain_number)),
                ('date', models.DateField()),
                ('comments', models.TextField()),
                ('experimental_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access.ExperimentalLog')),
            ],
            options={
                'ordering': ['-date', '-retain'],
            },
        ),
        migrations.CreateModel(
            name='ImportRetain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('prefix', models.CharField(blank=True, max_length=10, null=True)),
                ('flavor_number', models.PositiveIntegerField(blank=True, null=True)),
                ('lot_number', models.PositiveIntegerField(blank=True, null=True)),
                ('sub_lot_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name=b'Issue date')),
                ('number', models.PositiveIntegerField(default=newqc.models.get_next_lot_number)),
                ('sub_lot', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[(b'None', b'None'), (b'Passed', b'Passed'), (b'Rejected', b'Rejected'), (b'Expired', b'Expired'), (b'Created', b'Created'), (b'In Production', b'In Production'), (b'Pending QC', b'Pending QC'), (b'Hold', b'Hold'), (b'Resample', b'Resample'), (b'Rework', b'Rework'), (b'Duplicate', b'Duplicate'), (b'Under Review', b'Under Review'), (b'Batchsheet Printed', b'Batchsheet Printed'), (b'Pending', b'Pending'), (b'Not Passed...', b'Not Passed...'), (b'Destroyed', b'Destroyed')], default=b'Created', max_length=25)),
                ('amount', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('inventory_updated', models.BooleanField(default=False)),
                ('flavor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access.Flavor')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LotSOLIStamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salesordernumber', models.PositiveIntegerField()),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=9)),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newqc.Lot')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appearance', models.CharField(blank=True, max_length=100)),
                ('organoleptic_properties', models.CharField(blank=True, max_length=100)),
                ('testing_procedure', models.TextField(blank=True)),
                ('flash_point', models.FloatField(blank=True, null=True)),
                ('specific_gravity', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('product_notes', models.TextField(blank=True)),
                ('retain_on_file', models.BooleanField(default=False)),
                ('original_card', models.FileField(blank=True, null=True, upload_to=b'qc_original_cards')),
                ('flavor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='access.Flavor')),
            ],
        ),
        migrations.CreateModel(
            name='ReceivingLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_received', models.DateTimeField()),
                ('amount_received', models.DecimalField(decimal_places=4, max_digits=12)),
                ('supplier', models.CharField(max_length=40)),
                ('supplier_lot', models.CharField(max_length=40)),
                ('trucking_company', models.CharField(max_length=40)),
                ('manufacturer', models.CharField(max_length=40)),
                ('cp3_received', models.BooleanField(default=None)),
                ('poli', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access.PurchaseOrderLineItem')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='RecoveredImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recovery_path', models.CharField(max_length=255)),
                ('image_hash', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Retain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retain', models.PositiveSmallIntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'None', b'None'), (b'Passed', b'Passed'), (b'Rejected', b'Rejected'), (b'Expired', b'Expired'), (b'Created', b'Created'), (b'In Production', b'In Production'), (b'Pending QC', b'Pending QC'), (b'Hold', b'Hold'), (b'Resample', b'Resample'), (b'Rework', b'Rework'), (b'Duplicate', b'Duplicate'), (b'Under Review', b'Under Review'), (b'Batchsheet Printed', b'Batchsheet Printed'), (b'Pending', b'Pending'), (b'Not Passed...', b'Not Passed...'), (b'Destroyed', b'Destroyed')], max_length=25)),
                ('notes', models.CharField(blank=True, default=b'', max_length=500)),
                ('ir', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='newqc.ImportRetain')),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retains', to='newqc.Lot')),
            ],
            options={
                'ordering': ['-date', '-retain'],
            },
        ),
        migrations.CreateModel(
            name='RMImportRetain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('pin', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=40, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('lot', models.CharField(blank=True, max_length=40, null=True)),
                ('r_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RMInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin', models.PositiveSmallIntegerField()),
                ('testing_procedure', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('retain_on_file', models.BooleanField(default=False)),
                ('original_card', models.FileField(blank=True, null=True, upload_to=b'rm_original_cards')),
            ],
        ),
        migrations.CreateModel(
            name='RMRetain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name=b'Date on which product was QCed')),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pin', models.PositiveSmallIntegerField()),
                ('supplier', models.CharField(max_length=40)),
                ('lot', models.CharField(blank=True, default=b'', max_length=40)),
                ('r_number', models.PositiveSmallIntegerField()),
                ('status', models.CharField(choices=[(b'Ordered', b'Ordered'), (b'Received', b'Received'), (b'Pending QC', b'Pending QC'), (b'Passed', b'Passed'), (b'Hold', b'Hold'), (b'Resample', b'Resample'), (b'Rejected', b'Rejected'), (b'Expired', b'Expired')], max_length=25)),
                ('notes', models.CharField(blank=True, default=b'', max_length=200)),
                ('salmonella_negative_check', models.NullBooleanField(default=False)),
                ('coa_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='access.Documents')),
                ('ir', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='newqc.RMImportRetain')),
            ],
            options={
                'ordering': ['-date', '-r_number'],
            },
        ),
        migrations.CreateModel(
            name='ScannedDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_hash', models.CharField(blank=True, max_length=64)),
                ('large', models.ImageField(upload_to=b'scanned_doc_large')),
                ('thumbnail', models.ImageField(upload_to=b'scanned_doc_thumbnail')),
                ('notes', models.TextField(blank=True, default=b'')),
                ('scan_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('import_log', models.TextField(blank=True, default=b'')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ScannedSymbol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol_data', models.TextField()),
                ('symbol_type', models.CharField(max_length=100)),
                ('symbol_quality', models.DecimalField(decimal_places=2, max_digits=3)),
                ('symbol_location', models.CharField(max_length=100)),
                ('symbol_count', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=48)),
                ('specification', models.CharField(max_length=48)),
                ('result', models.CharField(blank=True, max_length=48, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='access.Customer')),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newqc.Lot')),
                ('replaces', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='newqc.TestResult')),
            ],
        ),
        migrations.CreateModel(
            name='BatchSheet',
            fields=[
                ('scanneddoc_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='newqc.ScannedDoc')),
                ('status', models.CharField(default=b'', max_length=25)),
            ],
            options={
                'ordering': ['-id'],
            },
            bases=('newqc.scanneddoc',),
        ),
        migrations.CreateModel(
            name='RMTestCard',
            fields=[
                ('scanneddoc_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='newqc.ScannedDoc')),
                ('status', models.CharField(choices=[(b'Ordered', b'Ordered'), (b'Received', b'Received'), (b'Pending QC', b'Pending QC'), (b'Passed', b'Passed'), (b'Hold', b'Hold'), (b'Resample', b'Resample'), (b'Rejected', b'Rejected'), (b'Expired', b'Expired')], default=b'Pending QC', max_length=25)),
                ('retain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='newqc.RMRetain')),
            ],
            bases=('newqc.scanneddoc',),
        ),
        migrations.CreateModel(
            name='TestCard',
            fields=[
                ('scanneddoc_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='newqc.ScannedDoc')),
                ('status', models.CharField(choices=[(b'None', b'None'), (b'Passed', b'Passed'), (b'Rejected', b'Rejected'), (b'Expired', b'Expired'), (b'Created', b'Created'), (b'In Production', b'In Production'), (b'Pending QC', b'Pending QC'), (b'Hold', b'Hold'), (b'Resample', b'Resample'), (b'Rework', b'Rework'), (b'Duplicate', b'Duplicate'), (b'Under Review', b'Under Review'), (b'Batchsheet Printed', b'Batchsheet Printed'), (b'Pending', b'Pending'), (b'Not Passed...', b'Not Passed...'), (b'Destroyed', b'Destroyed')], default=b'Pending QC', max_length=25)),
                ('qc_time', models.DateTimeField(blank=True, null=True)),
                ('retain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testcards', to='newqc.Retain')),
            ],
            bases=('newqc.scanneddoc',),
        ),
        migrations.AddField(
            model_name='scannedsymbol',
            name='scanned_doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newqc.ScannedDoc'),
        ),
        migrations.AddField(
            model_name='recoveredimage',
            name='scanned_doc',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='newqc.ScannedDoc'),
        ),
        migrations.AddField(
            model_name='receivinglog',
            name='rm_retain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newqc.RMRetain'),
        ),
        migrations.AddField(
            model_name='coa',
            name='lss',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newqc.LotSOLIStamp'),
        ),
        migrations.CreateModel(
            name='LotWeightAdjustment',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('newqc.lot',),
        ),
        migrations.AddField(
            model_name='batchsheet',
            name='lot',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='newqc.Lot'),
        ),
    ]
